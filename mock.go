// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/plimble/unik (interfaces: Interface)

package unik

import (
	gomock "code.google.com/p/gomock/gomock"
)

// Mock of Interface interface
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *_MockInterfaceRecorder
}

// Recorder for MockInterface (not exported)
type _MockInterfaceRecorder struct {
	mock *MockInterface
}

func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &_MockInterfaceRecorder{mock}
	return mock
}

func (_m *MockInterface) EXPECT() *_MockInterfaceRecorder {
	return _m.recorder
}

func (_m *MockInterface) BSON() string {
	ret := _m.ctrl.Call(_m, "BSON")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockInterfaceRecorder) BSON() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "BSON")
}

func (_m *MockInterface) Snowflake() string {
	ret := _m.ctrl.Call(_m, "Snowflake")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockInterfaceRecorder) Snowflake() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Snowflake")
}

func (_m *MockInterface) SnowflakeID(_param0 int) string {
	ret := _m.ctrl.Call(_m, "SnowflakeID", _param0)
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockInterfaceRecorder) SnowflakeID(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SnowflakeID", arg0)
}

func (_m *MockInterface) UUIDV1() string {
	ret := _m.ctrl.Call(_m, "UUIDV1")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockInterfaceRecorder) UUIDV1() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UUIDV1")
}

func (_m *MockInterface) UUIDV4() string {
	ret := _m.ctrl.Call(_m, "UUIDV4")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockInterfaceRecorder) UUIDV4() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UUIDV4")
}
